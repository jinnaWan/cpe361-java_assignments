plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'org.beryx.jlink' version '3.1.1'
}

repositories {
    mavenCentral()
}

dependencies {
    // Keep your existing dependencies
    testImplementation libs.junit.jupiter
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation libs.guava
    
    // Add explicit JavaFX dependencies
    implementation "org.openjfx:javafx-controls:23.0.2:win"
    implementation "org.openjfx:javafx-fxml:23.0.2:win"
}

// Apply a specific Java toolchain
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application
    mainClass = 'fxapp.Launcher'
    // Define the main module for the application
    mainModule = 'fxapp'
}

javafx {
    version = "23.0.2"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

tasks.named('test') {
    useJUnitPlatform()
}

// Create a special launcher class
task createLauncher {
    doLast {
        def launcherFile = new File("${projectDir}/src/main/java/fxapp/Launcher.java")
        launcherFile.parentFile.mkdirs()
        
        launcherFile.text = """
package fxapp;

public class Launcher {
    public static void main(String[] args) {
        App.main(args);
    }
}
"""
    }
}

// Make compileJava depend on createLauncher
compileJava.dependsOn createLauncher

// Configure jlink options
jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    
    launcher {
        name = 'StudentSorter'
        jvmArgs = []
    }
    
    // jpackage configuration for creating native installers
    jpackage {
        // Set the installer name
        imageName = 'StudentSorter'
        installerName = 'StudentSorter'
        
        // Set application version from project version
        appVersion = '1.0.0'
        
        // Skip installer creation (just create the runtime image)
        skipInstaller = true
        
        // Add vendor information
        vendor = 'StudentSorter'
    }
}